// Exercise 2: Mixins & Functions
// Import variables from exercise 1
@import "exercise1.less";

// TODO: Create the flex-center mixin shown in the README
// Hint: LESS mixins look like CSS classes with parameters
// .flex-center(@direction: row) {
//   display: flex;
//   justify-content: center;
//   align-items: center;
//   flex-direction: @direction;
// }

// TODO: Create the button-style mixin
// This should use the 'when' conditional to handle different sizes (See mixin guards below)
// .button-style(@bg: @primary, @size: medium) {
//   background: @bg;
//   border: none;
//   padding: when(@size=small, 0.5rem 1rem, 0.75rem 1.5rem);
//   border-radius: 4px;
//   cursor: pointer;
//
//   &:hover {
//     background: darken(@bg, 10%);
//   }
// }

// Use the mixin guards to handle different sizes:
// Padding for small
// .button-style(@bg: @primary, @size: small) when (@size = small) {
//  padding: 0.5rem 1rem;
// }
// Padding for medium (default)
// .button-style(@bg: @primary, @size: medium) when (@size = medium) {
//   padding: 0.75rem 1.5rem;
// }
// Padding for large
// .button-style(@bg: @primary, @size: large) when (@size = large) {
//   padding: 1.25rem 2rem;
// }

// Demo: Flex center usage
.flex-center-demo {
  // TODO: Use your flex-center mixin here
  width: 200px;
  height: 100px;
  background: lighten(@primary, 40%);
  border: 2px dashed @primary;
  border-radius: 8px;

  span {
    color: @primary;
    font-weight: bold;
  }
}

// Demo: Button style variations
// TODO: Create button classes using your mixin
// .btn-styled {
//   .button-style(@primary, medium);
// }
//
// .btn-small {
//   .button-style(@secondary, small);
// }
//
// .btn-large {
//   .button-style(@danger, large);
// }

// Demo: LESS Color Functions
.color-functions-demo {
  display: flex;
  gap: 1rem;
  margin: 1rem 0;

  .color-sample {
    width: 80px;
    height: 80px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    font-weight: bold;
    color: white;
    text-align: center;
    border-radius: 8px;
  }

  // TODO: Experiment with LESS color functions
  .original { background: @primary; }
  // .lightened { background: lighten(@primary, 20%); }
  // .darkened { background: darken(@primary, 20%); }
  // .saturated { background: saturate(@primary, 30%); }
  // .faded { background: fade(@primary, 50%); color: @dark; }
}
