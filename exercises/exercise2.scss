// Exercise 2: Mixins & Functions (SCSS Version)
// Import variables from exercise 1
@import "exercise1.scss";

// SCSS Flex center mixin (compare with LESS version)
@mixin flex-center($direction: row) {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: $direction;
}

// SCSS Button style mixin (note the @if/@else instead of when)
@mixin button-style($bg: $primary, $size: medium) {
  background: $bg;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  
  @if $size == small {
    padding: 0.5rem 1rem;
  } @else if $size == large {
    padding: 1rem 2rem;
  } @else {
    padding: 0.75rem 1.5rem;
  }
  
  &:hover {
    background: darken($bg, 10%);
  }
}

// Demo classes
.flex-center-demo {
  @include flex-center();
  width: 200px;
  height: 100px;
  background: lighten($primary, 40%);
  border: 2px dashed $primary;
  border-radius: 8px;
  
  span {
    color: $primary;
    font-weight: bold;
  }
}

.btn-styled {
  @include button-style($primary, medium);
}

.btn-small {
  @include button-style($secondary, small);
}

.btn-large {
  @include button-style($danger, large);
}

// Color functions demo
.color-functions-demo {
  display: flex;
  gap: 1rem;
  margin: 1rem 0;
  
  .color-sample {
    width: 80px;
    height: 80px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    font-weight: bold;
    color: white;
    text-align: center;
    border-radius: 8px;
  }
  
  .original { background: $primary; }
  .lightened { background: lighten($primary, 20%); }
  .darkened { background: darken($primary, 20%); }
  .saturated { background: saturate($primary, 30%); }
  .faded { background: rgba($primary, 0.5); color: $dark; }
}
